<?xml version="1.0" encoding="UTF-8"?>
<beans default-autowire="byName" xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
  xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
  xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

  <context:component-scan base-package="me.test" />

  <bean id="messageSource"
        class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basenames">
      <list>
        <value>messageSource</value>
      </list>
    </property>
  </bean>

  <bean id="urlPathHelper"
        class="org.springframework.web.util.UrlPathHelper" />


  <!-- ============================================== 定义一个ExceptionResolver -->
  <bean class="org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver">
    <property name="order" value="1" />
  </bean>
  <bean class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
    <property name="order" value="2" />
  </bean>
  <bean class="me.test.first.spring.rs.exception.MyExceptionResolver">
    <property name="order" value="3" />
  </bean>

  <!-- ============================================== 定义一个HandlerMapping -->
  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" >
  </bean>

  <!-- ============================================== 定义一个HandlerAdapter
  <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
    <property name="messageConverters">
      <util:list id="beanList">
        <!- - 原有的 - ->
        <ref bean="byteArrayHttpMessageConverter" />
        <ref bean="stringHttpMessageConverter"/>
        <ref bean="sourceHttpMessageConverter"/>
        <ref bean="xmlAwareFormHttpMessageConverter"/>

        <!- - 追加的 - ->
        <ref bean="mappingJacksonHttpMessageConverter"/>
      </util:list>
    </property>
  </bean>
   -->

  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
  </bean>
  <!-- MarshallingHttpMessageConverter
  RequestMappingHandlerAdapter
   -->


  <!--
    - 通过对 HttpMessageConverter 接口的 read()、write() 方法 Open Call Hierarchy，
    - write(): 当 controler 的方法被 @ResponseBody 标注、或返回值是 HttpEntity 时，
    - 则会直接调用 HttpMessageConverter 进行输出，使用顺序是使用按照  HTTP Header 中
    - Accept 头部一次进行尝试输出。
    - 此时返回的 ModelAndView 为 null，所以不会走 ContentNegotiatingViewResolver。
    - read()：而对于请求的解析，则是根据HTTP Header 中 Content-Type 来找到相应的解析器。
    - 结论：对于请求的解析只能使用 HttpMessageConverter，而对于输出，则应尽量避免使用
    - 它（也即：不要使用 HttpEntity 或   @ResponseBody）。否则无法使用 ContentNegotiatingViewResolver
    - 根据路径后缀来使用不同 ViewResolver 的功能。
   -->

  <!-- ============================================== 定义ViewResolver -->
  <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" >

  </mvc:annotation-driven>


  <bean id="contentNegotiationManager"
        class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
    <property name="mediaTypes" >
      <props>
        <prop key="json">application/json</prop>
        <!-- for jsnp? -->
      </props>
    </property>
    <property name="defaultContentType" value="application/json" />
  </bean>

  <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxUploadSize" value="100000"/>
  </bean>

</beans>
