<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:sec="http://www.springframework.org/schema/security" xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
                      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                      http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
                      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

  <sec:http realm="My SEC"
            use-expressions="true"
            disable-url-rewriting="true"
            entry-point-ref="casEntryPoint" >
    <sec:access-denied-handler error-page="/denied.jsp"/>
    <sec:form-login login-page="/index.jsp"  />
    <sec:logout logout-success-url="/logoutSuccess.jsp" />
    <sec:intercept-url pattern="/appointment.jsp"   access="hasAnyRole('ROLE_READ_APPOINTMENT')" />
    <sec:intercept-url pattern="/staff.jsp"         access="hasAnyRole('ROLE_READ_STAFF')" />

    <sec:custom-filter before="LOGOUT_FILTER"       ref="requestSingleLogoutFilter"  />
    <sec:custom-filter before="CAS_FILTER"          ref="singleLogoutFilter" />
    <sec:custom-filter position="CAS_FILTER"        ref="casFilter" />
  </sec:http>


  <!-- 该Filter会将用户重定向到CAS服务器，并通知CAS服务器进行单点退出操作 -->
  <bean id="requestSingleLogoutFilter"
        class="org.springframework.security.web.authentication.logout.LogoutFilter">
    <constructor-arg value="http://127.0.0.1:8080/fist-cas-server/logout"/>
    <constructor-arg>
      <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
    </constructor-arg>
    <property name="filterProcessesUrl" value="/j_spring_cas_security_logout"/>
  </bean>

  <!-- 该Filter处理来自CAS服务器的单点退出请求 -->
  <bean id="singleLogoutFilter"
        class="org.jasig.cas.client.session.SingleSignOutFilter"/>

  <!-- 默认监视 /j_spring_cas_security_check -->
  <bean id="casFilter"
        class="org.springframework.security.cas.web.CasAuthenticationFilter">
    <property name="authenticationManager"          ref="authenticationManager"/>
  </bean>

  <bean id="casEntryPoint"
        class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
    <!-- CAS服务器登录的URL -->
    <property name="loginUrl"                       value="http://127.0.0.1:9443/first-cas-server/login"/>
    <property name="serviceProperties"              ref="serviceProperties"/>
  </bean>

  <bean id="serviceProperties"
        class="org.springframework.security.cas.ServiceProperties">
    <!-- 发送给CAS服务器的回调URL -->
    <property name="service"                        value="http://localhost:8080/fist-spring-cas/j_spring_cas_security_check"/>
    <!-- 告知CAS服务器：本应用是敏感业务，不允许使用其他应用产生的登录状态，必须要求用户重新输入密码 -->
    <property name="sendRenew"                      value="false"/>
  </bean>

  <sec:authentication-manager alias="authenticationManager">
    <sec:authentication-provider ref="casAuthenticationProvider" />
  </sec:authentication-manager>

  <bean id="casAuthenticationProvider"
        class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
    <property name="authenticationUserDetailsService">
      <bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
        <constructor-arg                            ref="userService" />
      </bean>
    </property>
    <property name="serviceProperties"              ref="serviceProperties" />
    <property name="ticketValidator">
      <bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
        <constructor-arg index="0"                  value="http://127.0.0.1:8080/fist-cas-server/proxyValidate" /> <!-- 实际使用时最好使用HTTPS -->
      </bean>
    </property>
    <property name="key"                            value="an_id_for_this_auth_provider_only"/>
  </bean>

  <sec:user-service id="userService">
    <sec:user name="zhang3"  password="zhang3"      authorities="ROLE_USER" />
  </sec:user-service>

</beans>

